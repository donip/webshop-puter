{"version":3,"sources":["../../.tmp/alert/alert.component.ts"],"names":[],"mappings":"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","file":"alert.component.js","sourceRoot":"","sourcesContent":["import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output\n} from '@angular/core';\nimport { AlertConfig } from './alert.config';\nimport { OnChange } from '../utils/decorators';\n\n\nexport class AlertComponent implements OnInit {\n  /** Alert type.\n   * Provides one of four bootstrap supported contextual classes:\n   * `success`, `info`, `warning` and `danger`\n   */\n   type = 'warning';\n  /** If set, displays an inline \"Close\" button */\n  @OnChange()      dismissible = false;\n  /** Number in milliseconds, after which alert will be closed */\n   dismissOnTimeout: number | string;\n\n  /** Is alert visible */\n   isOpen = true;\n\n  /** This event fires immediately after close instance method is called,\n   * $event is an instance of Alert component.\n   */\n   onClose = new EventEmitter<AlertComponent>();\n  /** This event fires when alert closed, $event is an instance of Alert component */\n   onClosed = new EventEmitter<AlertComponent>();\n\n\n  classes = '';\n  dismissibleChange = new EventEmitter<boolean>();\n\n  constructor(_config: AlertConfig, private changeDetection: ChangeDetectorRef) {\n    Object.assign(this, _config);\n    this.dismissibleChange.subscribe((dismissible: boolean) => {\n      this.classes = this.dismissible ? 'alert-dismissible' : '';\n      this.changeDetection.markForCheck();\n    });\n  }\n\n  ngOnInit(): void {\n    if (this.dismissOnTimeout) {\n      // if dismissOnTimeout used as attr without binding, it will be a string\n      setTimeout(\n        () => this.close(),\n        parseInt(this.dismissOnTimeout as string, 10)\n      );\n    }\n  }\n\n  // todo: animation ` If the .fade and .in classes are present on the element,\n  // the alert will fade out before it is removed`\n  /**\n   * Closes an alert by removing it from the DOM.\n   */\n  close(): void {\n    if (!this.isOpen) {\n      return;\n    }\n\n    this.onClose.emit(this);\n    this.isOpen = false;\n    this.changeDetection.markForCheck();\n    this.onClosed.emit(this);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'alert,bs-alert',\n  template: \"<ng-template [ngIf]=\\\"isOpen\\\"> <div [class]=\\\"'alert alert-' + type\\\" role=\\\"alert\\\" [ngClass]=\\\"classes\\\"> <ng-template [ngIf]=\\\"dismissible\\\"> <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"close()\\\"> <span aria-hidden=\\\"true\\\">&times;</span> <span class=\\\"sr-only\\\">Close</span> </button> </ng-template> <ng-content></ng-content> </div> </ng-template> \",\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AlertConfig, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'type': [{ type: Input },],\n'dismissible': [{ type: Input },],\n'dismissOnTimeout': [{ type: Input },],\n'isOpen': [{ type: Input },],\n'onClose': [{ type: Output },],\n'onClosed': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}
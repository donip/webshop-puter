{"version":3,"sources":["../../../.tmp/chronos/units/timezone.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAGlD,kCAAkC;AAElC,aAAa;AACb,cAAc,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAC5B,UAAU,IAAU,EAAE,IAA0B;IAC9C,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,GAAG,EAAE,CAAC;AACjC,CAAC,CAAC,CAAC;AACL,cAAc,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAC7B,UAAU,IAAU,EAAE,IAA0B;IAC9C,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,4BAA4B,GAAG,EAAE,CAAC;AACxD,CAAC,CAAC,CAAC;AAEL,UAAU;AAEV,MAAM,sBAAsB,KAAc;IACxC,MAAM,CAAC,KAAK,GAAG,KAAK,GAAG,EAAE,CAAC;AAC5B,CAAC;AAED,MAAM,sBAAsB,KAAc;IACxC,MAAM,CAAC,KAAK,GAAG,4BAA4B,GAAG,EAAE,CAAC;AACnD,CAAC","file":"timezone.js","sourceRoot":"","sourcesContent":["import { addFormatToken } from '../format/format';\nimport { DateFormatterOptions } from '../types';\n\n// todo: add support for timezones\n\n// FORMATTING\naddFormatToken('z', null, null,\n  function (date: Date, opts: DateFormatterOptions): string {\n    return opts.isUTC ? 'UTC' : '';\n  });\naddFormatToken('zz', null, null,\n  function (date: Date, opts: DateFormatterOptions): string {\n    return opts.isUTC ? 'Coordinated Universal Time' : '';\n  });\n\n// MOMENTS\n\nexport function getZoneAbbr(isUTC: boolean) {\n  return isUTC ? 'UTC' : '';\n}\n\nexport function getZoneName(isUTC: boolean) {\n  return isUTC ? 'Coordinated Universal Time' : '';\n}\n"]}
{"version":3,"sources":["../../../.tmp/chronos/units/day-of-year.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAClD,OAAO,EAAE,OAAO,EAAE,MAAM,uBAAuB,CAAC;AAChD,OAAO,EAAE,aAAa,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,gBAAgB,CAAC;AAClE,OAAO,EAAE,aAAa,EAAE,MAAM,gBAAgB,CAAC;AAC/C,OAAO,EAAE,eAAe,EAAE,MAAM,cAAc,CAAC;AAC/C,OAAO,EAAE,YAAY,EAAE,MAAM,WAAW,CAAC;AAGzC,OAAO,EAAE,KAAK,EAAE,MAAM,sBAAsB,CAAC;AAC7C,OAAO,EAAE,GAAG,EAAE,MAAM,wBAAwB,CAAC;AAE7C,aAAa;AAEb,cAAc,CAAC,KAAK,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,KAAK,CAAC,EAAE,MAAM,EAC9C,UAAU,IAAU;IAClB,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC;AAGL,UAAU;AAEV,YAAY,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;AAEjC,WAAW;AAEX,eAAe,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;AAEhC,aAAa,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;AAChC,aAAa,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AAC9B,aAAa,CAAC,CAAC,KAAK,EAAE,MAAM,CAAC,EAC3B,UAAU,KAAa,EAAE,KAAgB,EAAE,MAAyB;IAClE,MAAM,CAAC,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;IAEjC,MAAM,CAAC,MAAM,CAAC;AAChB,CAAC,CAAC,CAAC;AAEL,MAAM,uBAAuB,IAAU;IACrC,IAAM,KAAK,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IACpC,IAAM,KAAK,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IACrC,IAAM,QAAQ,GAAG,KAAK,GAAG,KAAK,CAAC;IAC/B,IAAM,MAAM,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IAEnC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;AAC3C,CAAC;AAED,MAAM,uBAAuB,IAAU,EAAE,KAAa;IACpD,IAAM,SAAS,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC;IAErC,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,KAAK,GAAG,SAAS,CAAC,EAAE,KAAK,CAAC,CAAC;AAC/C,CAAC","file":"day-of-year.js","sourceRoot":"","sourcesContent":["import { addFormatToken } from '../format/format';\nimport { startOf } from '../utils/start-end-of';\nimport { addRegexToken, match1to3, match3 } from '../parse/regex';\nimport { addParseToken } from '../parse/token';\nimport { addUnitPriority } from './priorities';\nimport { addUnitAlias } from './aliases';\nimport { DateArray, DateFormatterOptions } from '../types';\nimport { DateParsingConfig } from '../create/parsing.types';\nimport { toInt } from '../utils/type-checks';\nimport { add } from '../moment/add-subtract';\n\n// FORMATTING\n\naddFormatToken('DDD', ['DDDD', 3, false], 'DDDo',\n  function (date: Date): string {\n    return getDayOfYear(date).toString(10);\n  });\n\n\n// ALIASES\n\naddUnitAlias('dayOfYear', 'DDD');\n\n// PRIORITY\n\naddUnitPriority('dayOfYear', 4);\n\naddRegexToken('DDD', match1to3);\naddRegexToken('DDDD', match3);\naddParseToken(['DDD', 'DDDD'],\n  function (input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n    config._dayOfYear = toInt(input);\n\n    return config;\n  });\n\nexport function getDayOfYear(date: Date): number {\n  const date1 = +startOf(date, 'day');\n  const date2 = +startOf(date, 'year');\n  const someDate = date1 - date2;\n  const oneDay = 1000 * 60 * 60 * 24;\n\n  return Math.round(someDate / oneDay) + 1;\n}\n\nexport function setDayOfYear(date: Date, input: number): Date {\n  const dayOfYear = getDayOfYear(date);\n\n  return add(date, (input - dayOfYear), 'day');\n}\n"]}
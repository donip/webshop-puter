{"version":3,"sources":["../../../.tmp/chronos/units/timestamp.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAClD,OAAO,EAAE,IAAI,EAAE,MAAM,uBAAuB,CAAC;AAC7C,OAAO,EAAE,aAAa,EAAE,WAAW,EAAE,cAAc,EAAE,MAAM,gBAAgB,CAAC;AAC5E,OAAO,EAAE,aAAa,EAAC,MAAM,gBAAgB,CAAC;AAC9C,OAAO,EAAE,KAAK,EAAE,MAAM,sBAAsB,CAAC;AAI7C,aAAa;AAEb,cAAc,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,IAAU;IAClD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC;AACH,cAAc,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,IAAU;IAClD,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC;AAEH,UAAU;AAEV,aAAa,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;AAChC,aAAa,CAAC,GAAG,EAAE,cAAc,CAAC,CAAC;AAEnC,aAAa,CAAC,GAAG,EAAE,UAAU,KAAa,EAAE,KAAgB,EAAE,MAAyB;IACrF,MAAM,CAAC,EAAE,GAAG,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;IAE/C,MAAM,CAAC,MAAM,CAAC;AAChB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,EAAE,UAAU,KAAa,EAAE,KAAgB,EAAE,MAAyB;IACrF,MAAM,CAAC,EAAE,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;IAEnC,MAAM,CAAC,MAAM,CAAC;AAChB,CAAC,CAAC,CAAC","file":"timestamp.js","sourceRoot":"","sourcesContent":["import { addFormatToken } from '../format/format';\nimport { unix } from '../utils/date-getters';\nimport { addRegexToken, matchSigned, matchTimestamp } from '../parse/regex';\nimport { addParseToken} from '../parse/token';\nimport { toInt } from '../utils/type-checks';\nimport { DateArray } from '../types';\nimport { DateParsingConfig } from '../create/parsing.types';\n\n// FORMATTING\n\naddFormatToken('X', null, null, function (date: Date): string {\n  return unix(date).toString(10);\n});\naddFormatToken('x', null, null, function (date: Date): string {\n  return date.valueOf().toString(10);\n});\n\n// PARSING\n\naddRegexToken('x', matchSigned);\naddRegexToken('X', matchTimestamp);\n\naddParseToken('X', function (input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n  config._d = new Date(parseFloat(input) * 1000);\n\n  return config;\n});\naddParseToken('x', function (input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n  config._d = new Date(toInt(input));\n\n  return config;\n});\n"]}
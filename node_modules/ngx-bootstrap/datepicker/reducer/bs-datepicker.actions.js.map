{"version":3,"sources":["../../../.tmp/datepicker/reducer/bs-datepicker.actions.ts"],"names":[],"mappings":"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","file":"bs-datepicker.actions.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\nimport { TimeUnit } from '../../chronos/types';\nimport { Action } from '../../mini-ngrx/index';\nimport {\n  BsDatepickerViewMode,\n  BsViewNavigationEvent,\n  CellHoverEvent,\n  DatepickerRenderOptions\n} from '../models/index';\n\n\nexport class BsDatepickerActions {\n  static readonly CALCULATE = '[datepicker] calculate dates matrix';\n  static readonly FORMAT = '[datepicker] format datepicker values';\n  static readonly FLAG = '[datepicker] set flags';\n  static readonly SELECT = '[datepicker] select date';\n  static readonly NAVIGATE_OFFSET = '[datepicker] shift view date';\n  static readonly NAVIGATE_TO = '[datepicker] change view date';\n  static readonly SET_OPTIONS = '[datepicker] update render options';\n  static readonly HOVER = '[datepicker] hover date';\n  static readonly CHANGE_VIEWMODE = '[datepicker] switch view mode';\n\n  static readonly SET_MIN_DATE = '[datepicker] set min date';\n  static readonly SET_MAX_DATE = '[datepicker] set max date';\n  static readonly SET_IS_DISABLED = '[datepicker] set is disabled';\n\n  static readonly SET_LOCALE = '[datepicker] set datepicker locale';\n\n  static readonly SELECT_RANGE = '[daterangepicker] select dates range';\n\n  calculate(): Action {\n    return { type: BsDatepickerActions.CALCULATE };\n  }\n\n  format(): Action {\n    return { type: BsDatepickerActions.FORMAT };\n  }\n\n  flag(): Action {\n    return { type: BsDatepickerActions.FLAG };\n  }\n\n  select(date: Date): Action {\n    return {\n      type: BsDatepickerActions.SELECT,\n      payload: date\n    };\n  }\n\n  changeViewMode(event: BsDatepickerViewMode): Action {\n    return {\n      type: BsDatepickerActions.CHANGE_VIEWMODE,\n      payload: event\n    };\n  }\n\n  navigateTo(event: BsViewNavigationEvent): Action {\n    return {\n      type: BsDatepickerActions.NAVIGATE_TO,\n      payload: event\n    };\n  }\n\n  navigateStep(step: TimeUnit): Action {\n    return {\n      type: BsDatepickerActions.NAVIGATE_OFFSET,\n      payload: step\n    };\n  }\n\n  setOptions(options: DatepickerRenderOptions): Action {\n    return {\n      type: BsDatepickerActions.SET_OPTIONS,\n      payload: options\n    };\n  }\n\n  // date range picker\n  selectRange(value: Date[]): Action {\n    return {\n      type: BsDatepickerActions.SELECT_RANGE,\n      payload: value\n    };\n  }\n\n  hoverDay(event: CellHoverEvent): Action {\n    return {\n      type: BsDatepickerActions.HOVER,\n      payload: event.isHovered ? event.cell.date : null\n    };\n  }\n\n  minDate(date: Date): Action {\n    return {\n      type: BsDatepickerActions.SET_MIN_DATE,\n      payload: date\n    };\n  }\n\n  maxDate(date: Date): Action {\n    return {\n      type: BsDatepickerActions.SET_MAX_DATE,\n      payload: date\n    };\n  }\n\n  isDisabled(value: boolean): Action {\n    return {\n      type: BsDatepickerActions.SET_IS_DISABLED,\n      payload: value\n    };\n  }\n\n  setLocale(locale: string): Action {\n    return {\n      type: BsDatepickerActions.SET_LOCALE,\n      payload: locale\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}
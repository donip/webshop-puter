{"version":3,"sources":["../../.tmp/sortable/draggable-item.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,OAAA,EAAQ,MAAO,cAAA,CAAe;AAIvC;IAAA;QAGU,cAAS,GAA2B,IAAI,OAAO,EAAiB,CAAC;IAiC3E,CAAC;IA/BC,wCAAS,GAAT,UAAU,IAAmB;QAC3B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;IAC5B,CAAC;IAED,sCAAO,GAAP;QACE,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IAED,0CAAW,GAAX,UAAY,aAAqB,EAAE,QAAgB;QACjD,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,aAAa,KAAK,aAAa,CAAC,CAAC,CAAC;YACvD,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC;YACpE,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,aAAa,CAAC;YACjD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YACxC,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,aAAa,EAAE;gBACzD,aAAa,eAAA;gBACb,CAAC,EAAE,QAAQ;aACZ,CAAC,CAAC;QACL,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IAED,4CAAa,GAAb;QACE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IACI,+BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,mCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,2BAAC;CApCD,AAoCC,IAAA;SApCY,oBAAoB","file":"draggable-item.service.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { DraggableItem } from './draggable-item';\n\n\nexport class DraggableItemService {\n  private draggableItem: DraggableItem;\n\n  private onCapture: Subject<DraggableItem> = new Subject<DraggableItem>();\n\n  dragStart(item: DraggableItem): void {\n    this.draggableItem = item;\n  }\n\n  getItem(): DraggableItem {\n    return this.draggableItem;\n  }\n\n  captureItem(overZoneIndex: number, newIndex: number): DraggableItem {\n    if (this.draggableItem.overZoneIndex !== overZoneIndex) {\n      this.draggableItem.lastZoneIndex = this.draggableItem.overZoneIndex;\n      this.draggableItem.overZoneIndex = overZoneIndex;\n      this.onCapture.next(this.draggableItem);\n      this.draggableItem = Object.assign({}, this.draggableItem, {\n        overZoneIndex,\n        i: newIndex\n      });\n    }\n\n    return this.draggableItem;\n  }\n\n  onCaptureItem(): Subject<DraggableItem> {\n    return this.onCapture;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}